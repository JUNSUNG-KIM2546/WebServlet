<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>exweb</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
  </welcome-file-list>
  
  <!-- 톰캣에 com.exam.ex.ByServlet 객체를 bye라는 이름의 서블릿으로 등록 -->
  <servlet>
  	<servlet-name>bye</servlet-name>
  	<servlet-class>com.exam.ex.ByServlet</servlet-class>	<!-- 파일 위치(경로) -->
  </servlet>
  <!-- "/bye.do" 파일에 대한 요청이 오면, bye 라는 이름으로 등록된 서블릿을 실행 -->
  <servlet-mapping>
	<servlet-name>bye</servlet-name>
 	<url-pattern>/bye.do</url-pattern>
  </servlet-mapping>
  
  
  
   <servlet>
  	<servlet-name>foo</servlet-name>
  	<servlet-class>com.exam.ex.HiServlet2</servlet-class>	<!-- 파일 위치(경로) -->
  </servlet>
  <!-- "/bye.do" 파일에 대한 요청이 오면, bye 라는 이름으로 등록된 서블릿을 실행 -->
  <servlet-mapping>
	<servlet-name>foo</servlet-name>
 	<url-pattern>/foo/bar.do</url-pattern>	<!-- 크롬에서 이걸 요청하면 위에 있는걸 가지고 와라 -->
  </servlet-mapping>
  
  
<!--    <servlet> 
   	<servlet-name>loader</servlet-name>
  	<servlet-class>com.exam.comm.DriverServlet</servlet-class>
  	서블릿에서 읽을 수 있는 데이터를 이름 - 값 형태로 설정 가능
  	<init-param>
  		<param-name>driver</param-name>
  		<param-value>oracle.jdbc.OracleDriver</param-value>
  	</init-param>
load-on-startup 값을 0이상의 정수로 지정을 하면, 서버(톰캣) 시작시 이 서블릿 객체를 미리 생성 (숫자오름차순으로 생성) 
음수로 지정하면, 서버(톰캣)이 필요하다고 판단할때 서블릿 객체를 생성 (일반적으로 요청을 받으면 생성) 
   	<load-on-startup>0</load-on-startup>
   </servlet> 
  
   <servlet-mapping>
   	<servlet-name>loader</servlet-name>
   	<url-pattern>/load</url-pattern>
   </servlet-mapping>   -->
  
  
  <!--listener -->
  <!-- 웹 애플리케이션 전체에서 사용 가능한 데이터를 이름-값 형태로 설정, 서블릿컨텍스트 객체에 저장된다. -->
  <context-param>
  	<param-name>driver</param-name>
   	<param-value>oracle.jdbc.OracleDriver</param-value>
  </context-param>
  
  <listener>
  <listener-class>com.exam.comm.DriverListener</listener-class>
  </listener>
    
  <filter>
  	<filter-name>encFilter</filter-name>
  	<filter-class>com.exam.comm.CharacterEncodingFilter</filter-class>
  	<init-param>
  		<param-name>encoding</param-name>	<!-- 변수명(이름) -->
  		<param-value>UTF-8</param-value>	<!-- 값 -->
  	</init-param>
  </filter>
  
  <filter-mapping>
  	<filter-name>encFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 로그인 필터 설정 -->
  <filter>
  	<filter-name>login</filter-name>
  	<filter-class>com.exam.comm.LoginFilter</filter-class>
  </filter>
  
  <filter-mapping>
  	<!-- .do로 끝나는것만 필터를 적용 하겠다,(로그인페이지로 보내겠다.) -->
  	<filter-name>login</filter-name>
  	<url-pattern>*.do</url-pattern>
  </filter-mapping>
  
  <!-- 웹애플리케이션에서 오류가 발생했을때 실행할 서블릿 또는 JSP 설정 -->
  <error-page>
  	<!-- 응답 상태코드가 404인 경우, 실행할 오류페이지 지정 -->
  	<error-code>404</error-code>
  	<location>/err404.jsp</location>
  </error-page>
  
  <error-page>
  	<!-- 널포인트 인셉션에러 원인 넣기 -->
  	<!-- 발생한 예외객체가 java.lang.NullPointerException 타입인 경우, 실행할 오류페이지 지정 -->
  	<exception-type>java.lang.NullPointerException</exception-type>
  	<location>/errNull.jsp</location>
  </error-page>
  
</web-app>
